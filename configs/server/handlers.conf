# Global Request Processing
# ---------------------------------------------------------------------
access_by_lua_block {
    -- Apply middleware chain
    local middleware = require "middleware"
    local ctx = middleware.new_context()

    -- Health check
    if not middleware.run(ctx, "health_check") then
        return
    end

    -- IP ban check
    if not middleware.run(ctx, "ip_ban") then
        return
    end

    -- Rate limiting
    if not middleware.run(ctx, "rate_limit") then
        return
    end

    -- Request tracking
    if not middleware.run(ctx, "request_tracking") then
        return
    end

    -- Proxy setup
    if not middleware.run(ctx, "proxy") then
        return
    end
}

# Global Response Processing
# ---------------------------------------------------------------------
header_filter_by_lua_block {
    -- Apply response middleware chain
    local middleware = require "middleware"
    local ctx = middleware.new_context()

    -- CORS handling
    middleware.run(ctx, "cors")

    -- Security headers
    middleware.run(ctx, "security_headers")

    -- Response metrics
    middleware.run(ctx, "metrics")
}

# Error Handling
# ---------------------------------------------------------------------
log_by_lua_block {
    -- Apply error middleware
    local middleware = require "middleware"
    local ctx = middleware.new_context()

    -- Error tracking
    middleware.run(ctx, "error_tracking")
} 