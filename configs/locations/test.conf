# =============================================================================
# Integration Test Endpoints
# =============================================================================

location ~ ^/test/(.+) {
    default_type 'text/plain';
    access_by_lua_block {
        -- Run middleware chain first
        local middleware_chain = require "modules.core.middleware_chain"
        local ok, err = pcall(function()
            return middleware_chain.run_chain()
        end)
        
        if not ok then
            ngx.log(ngx.ERR, "Middleware chain error: ", err)
            ngx.status = 500
            ngx.say("Internal Server Error")
            ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
        end
        
        -- If chain returns false, stop processing
        if err == false then
            ngx.exit(ngx.HTTP_OK)
            return
        end
        
        -- Capture the test path
        local test_path = ngx.var[1]
        ngx.log(ngx.DEBUG, "Running test: ", test_path)
        
        -- Load the test module
        local test_module = require("tests." .. test_path)
        local test_utils = require "tests.core.test_utils"
        
        -- Run the tests
        local total_passed = 0
        local total_failed = 0
        
        ngx.say("\nRunning " .. test_path .. " tests...\n")
        
        for _, test in ipairs(test_module.tests) do
            ngx.say(test.name)
            local ok, err = pcall(test.func)
            if not ok then
                ngx.say("âœ— Failed: " .. tostring(err))
                total_failed = total_failed + 1
            else
                total_passed = total_passed + 1
            end
        end
        
        -- Run cleanup if available
        if test_module.after_all then
            ngx.log(ngx.DEBUG, "Running after_all cleanup for: ", test_path)
            local ok, err = pcall(test_module.after_all)
            if not ok then
                ngx.log(ngx.ERR, "Cleanup failed: ", err)
            end
        end
        
        ngx.say("\nResults: " .. total_passed .. " passed, " .. total_failed .. " failed")
    }
} 